#include<bits/stdc++.h>
#define ll long long int
using namespace std;

bool check(pair<ll,ll>i,vector<pair<ll,ll>>p)
{
    if(i.first==0&&i.second==0)
    return 0;
    
    ll count=0,prev;
    if((i.first*p[0].first+i.second*p[0].second)>0)
    prev=1;
    else 
    prev=0;
    for(auto j:p)
    {
        ll pos=i.first*j.first+i.second*j.second;
        
        if(pos==0)
        return 0;
        
        if(prev==1&&pos<0)
        count++;
        else if(prev==0&&pos>0)
        count++;
        
        if(pos>0)
        {
            prev=1;
        }
        if(pos<0)
        {
            prev=0;
        }
        
        if(count>2)
        return 0;
    }
    
    if(count<=2)
    {
        cout<<i.first<<" "<<i.second<<"\n";
        return 1;
    }
    else
    return 0;
}
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        
        ll x[n+2],y[n+2];
       
       map<double,vector<pair<ll,ll>>>m;
        cin>>x[1]>>y[1];
        int i;
        vector<pair<ll,ll>>p;
        for(i=2;i<=n;++i)
        {
            cin>>x[i]>>y[i];
            ll xx=x[i]-x[i-1];
            ll yy=y[i]-y[i-1];
            double temp=(yy)/sqrt(xx*xx+yy*yy);
            p.push_back(make_pair(xx,yy));
            m[acos(temp)].push_back(make_pair(yy,-1*xx));
            m[acos(-1*temp)].push_back(make_pair(-1*yy,xx));
            
        }
        ll xx=x[1]-x[n];
        ll yy=y[1]-y[n];
        p.push_back(make_pair(xx,yy));
        double temp=(yy)/sqrt(xx*xx+yy*yy);
        m[acos(temp)].push_back(make_pair(yy,-1*xx));
        m[acos(-1*temp)].push_back(make_pair(-1*yy,xx));
        vector<pair<ll,ll>>per;
        
        for(auto i:m)
        {
            for(auto j:i.second)
            {
                //cout<<i.first<<" "<<j.first<<" "<<j.second<<"\n"; 
                per.push_back(make_pair(j.first,j.second));
            }
        }
        
        set<pair<ll,ll>>ans;
        for(ll i=0;i<per.size()-1;i++)
        {
            ans.insert(make_pair(per[i].first+per[i+1].first,per[i].second+per[i+1].second));
        }
        ans.insert(make_pair(per[0].first+per[per.size()-1].first,per[0].second+per[per.size()-1].second));
        bool tempp=0;
        bool tem=0;
        
        for(auto i:ans)
        {
                if(check(i,p))
                {
                    tempp=1;
                    break;
                }
            if(tempp==1)
            break;
        }
        if(tempp==0)
        cout<<"0 0\n";
        
      
    }
    return 0;
}
